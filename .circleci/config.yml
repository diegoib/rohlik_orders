version: '2.1'
orbs:
  node: circleci/node@5.1.0

defaults: &defaults
  docker:
    - image: cimg/python:3.11.1
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      pip install --user tox

fetch_data: &fetch_data
  run:
    name: Set script permissions and fetch data
    command: |
      source venv/bin/activate
      chmod +x ./scripts/fetch_kaggle_dataset.sh
      ./scripts/fetch_kaggle_dataset.sh

prepare_gcloud: &prepare_gcloud
  run:
    name: Install gcloud cli
    command: |
      sudo apt-get update
      sudo apt-get install apt-transport-https ca-certificates gnupg curl
      curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
      echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      sudo apt-get update && sudo apt-get install google-cloud-cli
      gcloud version

jobs:

  test_and_upload_regression_model:
    <<: *defaults
    working_directory: ~/project/model-package
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Fetch the data
          command: |
            tox -e fetch_data
      - run:
          name: Test the model
          command: |
            tox
      - run:
          name: Publish model to Gemfury
          command: |
            tox -e publish_model
  
  test_api:
    <<: *defaults
    working_directory: ~/project/orders-api
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning app tests
          command: |
            tox

  deploy_api:
    <<: *defaults
    working_directory: ~/project/orders-api
    steps:
      - checkout:
          path: ~/project
      - *prepare_gcloud
      - run:
          name: Authenticate with Google Cloud
          command: |
            echo $GOOGLE_AUTH > gcloud-service-key.json
            gcloud auth activate-service-account --key-file=gcloud-service-key.json
            gcloud config set project $GOOGLE_PROJECT_ID
      - run:
          name: Configure Docker for Artifact Registry
          command: |
            gcloud auth configure-docker $GCP_REGION-docker.pkg.dev
      - run:
          name: Build Docker image
          command: |
            docker build --build-arg PIP_EXTRA_INDEX_URL=$PIP_EXTRA_INDEX_URL \ 
              -t $GCP_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:latest .
      - run:
          name: Push Docker image to Artifact Registry
          command: |
            docker push $GCP_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:latest
      - run:
          name: Deploy to Google Cloud Run
          command: |
            gcloud run deploy $CLOUD_RUN_SERVICE \
              --image $GCP_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/$ARTIFACT_REPO/$IMAGE_NAME:latest \
              --region $GCP_REGION \
              --platform managed \
              --allow-unauthenticated

tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^.*/

workflows:
  version: 2
  deploy_pipeline:
    jobs:
      - test_and_upload_regression_model
      - test_api:
          requires:
            - test_and_upload_regression_model
      - deploy_api:
          requires:
            - test_api
      # upload after git tags are created
      #- test_and_upload_regression_model:
      #    <<: *tags_only
